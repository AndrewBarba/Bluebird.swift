{"Functions.html#/s:8Bluebird3allAA7PromiseCySayxGGSo13DispatchQueueC2on_SayADyxGGdtlF":{"name":"all(on:_:)","abstract":"<p>Returns a Promise that resolved when all passed in Promises resolve. Rejects as soon as one promise rejects.</p>"},"Functions.html#/s:8Bluebird3allAA7PromiseCySayxGGSo13DispatchQueueC2on_q_ts8SequenceR_ADyxG7ElementRt_r0_lF":{"name":"all(on:_:)","abstract":"<p>Returns a Promise that resolved when all passed in Promises resolve. Rejects as soon as one promise rejects.</p>"},"Functions.html#/s:8Bluebird3anyAA7PromiseCyxGSo13DispatchQueueC2on_SayAEGdtlF":{"name":"any(on:_:)","abstract":"<p>Returns a Promise that resolves as soon as one passed in Promise resolves</p>"},"Functions.html#/s:8Bluebird3anyAA7PromiseCyxGSo13DispatchQueueC2on_q_ts8SequenceR_AE7ElementRt_r0_lF":{"name":"any(on:_:)","abstract":"<p>Returns a Promise that resolves as soon as one passed in Promise resolves</p>"},"Functions.html#/s:8Bluebird5delayAA7PromiseCyxGSo13DispatchQueueC2on_SdxtlF":{"name":"delay(on:_:_:)","abstract":"<p>Delay the start of a Promise chain by some number of seconds</p>"},"Functions.html#/s:8Bluebird5delayAA7PromiseCyxGSo13DispatchQueueC2on_SdAEtlF":{"name":"delay(on:_:_:)","abstract":"<p>Delay the start of a Promise chain by some number of seconds</p>"},"Functions.html#/s:8Bluebird4joinAA7PromiseCyx_q_tGSo13DispatchQueueC2on_ADyxGADyq_Gtr0_lF":{"name":"join(on:_:_:)","abstract":"<p>Returns a Promise that resolves to a tuple of the passed in Promises. Rejects as soon as one Promise rejects.</p>"},"Functions.html#/s:8Bluebird4joinAA7PromiseCyx_q_q0_tGSo13DispatchQueueC2on_ADyxGADyq_GADyq0_Gtr1_lF":{"name":"join(on:_:_:_:)","abstract":"<p>Returns a Promise that resolves to a tuple of the passed in Promises. Rejects as soon as one Promise rejects.</p>"},"Functions.html#/s:8Bluebird4joinAA7PromiseCyx_q_q0_q1_tGSo13DispatchQueueC2on_ADyxGADyq_GADyq0_GADyq1_Gtr2_lF":{"name":"join(on:_:_:_:_:)","abstract":"<p>Returns a Promise that resolves to a tuple of the passed in Promises. Rejects as soon as one Promise rejects.</p>"},"Functions.html#/s:8Bluebird3mapAA7PromiseCySayq_GGSo13DispatchQueueC2on_q0_ADyq_GxKct7ElementQy0_Rszs8SequenceR0_r1_lF":{"name":"map(on:_:_:)","abstract":"<p>Map an array of items to Promises, and resolve when all Promises resolve. Rejects as soon as any Promise rejects.</p>"},"Functions.html#/s:8Bluebird9mapSeriesAA7PromiseCySayq_GGSo13DispatchQueueC2on_q0_ADyq_GxKct7ElementQy0_Rszs8SequenceR0_r1_lF":{"name":"mapSeries(on:_:_:)","abstract":"<p>Map an array of items to Promises, and resolve each Promise in series. Rejects as soon as any Promise rejects.</p>"},"Functions.html#/s:8Bluebird4raceAA7PromiseCyxGSo13DispatchQueueC2on_SayAEGdtlF":{"name":"race(on:_:)","abstract":"<p>Identical to <code>all</code>, but does not throw an error for an empty array of Promises</p>"},"Functions.html#/s:8Bluebird4raceAA7PromiseCyxGSo13DispatchQueueC2on_q_ts8SequenceR_AE7ElementRt_r0_lF":{"name":"race(on:_:)","abstract":"<p>Identical to <code>all</code>, but does not throw an error for an empty array of Promises</p>"},"Functions.html#/s:8Bluebird6reduceAA7PromiseCyq_GSo13DispatchQueueC2on_q0_q_AEq__xtKct7ElementQy0_Rszs8SequenceR0_r1_lF":{"name":"reduce(on:_:_:_:)","abstract":"<p>Reduce a sequence of items with a asynchronous operation (Promise) to a single value</p>"},"Functions.html#/s:8Bluebird3tryAA7PromiseCyxGSo13DispatchQueueC2on_AEyKctlF":{"name":"try(on:_:)","abstract":"<p>Begin a promise chain</p>"},"Functions.html#/s:8Bluebird3tryAA7PromiseCyxGSo13DispatchQueueC2on_xyKctlF":{"name":"try(on:_:)","abstract":"<p>Begin a promise chain</p>"},"Functions.html#/s:8Bluebird11VoidPromiseAA0C0CyytGyF":{"name":"VoidPromise()","abstract":"<p>Convenient function for creating a resolved Void Promise</p>"},"Enums/ReflectionState.html#/s:8Bluebird15ReflectionStateO8resolvedACyxGxcAEmlF":{"name":"resolved","abstract":"<p>Undocumented</p>","parent_name":"ReflectionState"},"Enums/ReflectionState.html#/s:8Bluebird15ReflectionStateO8rejectedACyxGs5Error_pcAEmlF":{"name":"rejected","abstract":"<p>Undocumented</p>","parent_name":"ReflectionState"},"Enums/ReflectionState.html#/s:8Bluebird15ReflectionStateO6resultxSgv":{"name":"result","abstract":"<p>The resolved result</p>","parent_name":"ReflectionState"},"Enums/ReflectionState.html#/s:8Bluebird15ReflectionStateO5errors5Error_pSgv":{"name":"error","abstract":"<p>The rejected error</p>","parent_name":"ReflectionState"},"Enums/BluebirdError.html#/s:8Bluebird0A5ErrorO9cancelledA2CmF":{"name":"cancelled","abstract":"<p>Undocumented</p>","parent_name":"BluebirdError"},"Enums/BluebirdError.html#/s:8Bluebird0A5ErrorO05rangeB0A2CmF":{"name":"rangeError","abstract":"<p>Undocumented</p>","parent_name":"BluebirdError"},"Enums/BluebirdError.html#/s:8Bluebird0A5ErrorO7timeoutACSdcACmF":{"name":"timeout","abstract":"<p>Undocumented</p>","parent_name":"BluebirdError"},"Enums/BluebirdError.html":{"name":"BluebirdError","abstract":"<p>Bluebird errors</p>"},"Enums/ReflectionState.html":{"name":"ReflectionState","abstract":"<p>Enum used to describe the result of a promise</p>"},"Classes/Promise.html#/s:8Bluebird7PromiseC9isPendingSbv":{"name":"isPending","abstract":"<p>Is this Promise in a pending state</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC6resultxSgv":{"name":"result","abstract":"<p>The resolved result of the promise</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC5errors5Error_pSgv":{"name":"error","abstract":"<p>The rejected error of the promise</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseCACyxGx7resolve_tcfc":{"name":"init(resolve:)","abstract":"<p>Initialize to a resolved result</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseCACyxGs5Error_p6reject_tcfc":{"name":"init(reject:)","abstract":"<p>Initializa to a rejected error</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseCACyxGyyxc_ys5Error_pctKccfc":{"name":"init(_:)","abstract":"<p>Initialize using a resolver function</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseCACyxGADyKccfc":{"name":"init(_:)","abstract":"<p>Convenience initializer to resolve this Promise when a returned Promise is resolved</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC5catchACyytGSo13DispatchQueueC2on_ys5Error_pKctF":{"name":"catch(on:_:)","abstract":"<p>Catches an error in a Promise chain and allows the chain to recover</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC7recoverACyxGSo13DispatchQueueC2on_AEs5Error_pKctF":{"name":"recover(on:_:)","abstract":"<p>Catch a Promise rejection and recover from it if possible</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC7recoverACyxGSo13DispatchQueueC2on_xs5Error_pKctF":{"name":"recover(on:_:)","abstract":"<p>Catch a Promise rejection and recover from it if possible</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC8Resolvera":{"name":"Resolver","abstract":"<p>Wrap a Promise and its resolve / reject handlers in a tuple</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC5deferACyxG7promise_yxc7resolveys5Error_pc6rejecttyFZ":{"name":"defer()","abstract":"<p>Useful for resolving a Promise outside of the default constructors</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC5delayACyxGSo13DispatchQueueC2on_SdtF":{"name":"delay(on:_:)","abstract":"<p>Delay the next handler of the Promise chain by some number of seconds</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC7finallyACyxGSo13DispatchQueueC2on_yyKctF":{"name":"finally(on:_:)","abstract":"<p>Always run a handler at the end of a promise chain regardless of the whether the chain resolves or rejects</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseCAAs8SequenceRzlE3mapACySayqd__GGSo13DispatchQueueC2on_ACyqd__G7ElementQzKctlF":{"name":"map(on:_:)","abstract":"<p>Identical to <code>map()</code>, but can be chained on an existing promise that resolves to a sequence type</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseCAAs8SequenceRzlE9mapSeriesACySayqd__GGSo13DispatchQueueC2on_ACyqd__G7ElementQzKctlF":{"name":"mapSeries(on:_:)","abstract":"<p>Identical to <code>map(series)</code>, but can be chained on an existing promise that resolves to a sequence type</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseCAAs8SequenceRzlE6reduceACyqd__GSo13DispatchQueueC2on_qd__AFqd___7ElementQztKctlF":{"name":"reduce(on:_:_:)","abstract":"<p>Identical to <code>reduce()</code>, but can be chained on an existing promise that resolves to a sequence type</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC7reflectACyAA15ReflectionStateOyxGGSo13DispatchQueueC2on_tF":{"name":"reflect(on:)","abstract":"<p>Returns a Promise that will always resolve to the final state of the receiver</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC3tapACyxGSo13DispatchQueueC2on_ACyqd__GxKctlF":{"name":"tap(on:_:)","abstract":"<p>Perform an operation in the middle of a promise chain that does not effect the resolved value, but can reject the chain</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC3tapACyxGSo13DispatchQueueC2on_yxKctF":{"name":"tap(on:_:)","abstract":"<p>Perform an operation in the middle of a promise chain that does not effect the resolved value</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC6returnACyqd__GSo13DispatchQueueC2on_qd__tlF":{"name":"return(on:_:)","abstract":"<p>Convenience method for <code>.then { _ in value }</code></p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC10thenReturnACyqd__GSo13DispatchQueueC2on_qd__tlF":{"name":"thenReturn(on:_:)","abstract":"<p>Convenience method for <code>.then { _ in value }</code></p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC4thenACyqd__GSo13DispatchQueueC2on_AExKctlF":{"name":"then(on:_:)","abstract":"<p>Perform an operation on a Promise once it resolves. The chain will then resolve to the Promise returned from the handler</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC4thenACyqd__GSo13DispatchQueueC2on_qd__xKctlF":{"name":"then(on:_:)","abstract":"<p>Perform an operation on a Promise once it resolves. The chain will then resolve to the Promise returned from the handler</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC7timeoutACyxGSo13DispatchQueueC2on_Sds5Error_pSgtF":{"name":"timeout(on:_:_:)","abstract":"<p>Reject the receiving Promise if it does not resolve / reject after a given number of seconds</p>","parent_name":"Promise"},"Classes/Promise.html#/s:8Bluebird7PromiseC6asVoidACyytGv":{"name":"asVoid","abstract":"<p>Converts the current Promise to a generic Void Promise</p>","parent_name":"Promise"},"Classes/Promise.html":{"name":"Promise","abstract":"<p>Undocumented</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"}}